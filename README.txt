My Java code offers two algorithms: Steepest Ascent Hill Climbing and Genetic Algorithm to solve the Eight Queens puzzle. The program lets the user choose between these algorithms to solve the puzzle for a specified number of instances. For Steepest Ascent Hill Climbing, the code generates random initial boards and iteratively explores neighboring states, selecting the state with the minimum conflicts. If no state with fewer conflicts is found, it terminates without a solution. Genetic Algorithm involves evolving a population through selection, crossover, and mutation operations, aiming to minimize conflicts. If a solution is found, the algorithm terminates, displaying the results. Both algorithms track search cost (steps) and time taken, with the program presenting average statistics after solving the instances. The user interacts with the solver through a simple text-based menu until choosing to exit.